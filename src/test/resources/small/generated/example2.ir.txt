<Code body of function Lexample2>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     example2.js [0->360] (line 1) [1=[arguments]]
1   v6 = global:global Function              example2.js [1->359] (line 15)
2   v3 = construct v6@2 v5:#Lexample2/nodejsModule exception:v4example2.js [1->359] (line 15)
3   v11 = global:global __WALA__int3rnal__globalexample2.js [1->359] (line 15)
4   v2 = invoke v3@4 v11 exception:v12       example2.js [1->359] (line 15)
BB2


<ctor for <JavaScriptLoader,LFunction>(Lexample2/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample2/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample2/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example2.js [1->356] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           example2.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                example2.js [41->103] (line 2)
4   check v9                                 example2.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        example2.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             example2.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lexample2/nodejsModule/__WALA__require exception:v13example2.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     example2.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               example2.js [98->100] (line 4)
10   check v18                               example2.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    example2.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    example2.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            example2.js [109->327] (line 12)
15   v21 = construct v24@15 v23:#Lexample2/nodejsModule/moduleSource exception:v22example2.js [109->327] (line 12)
16   v27 = global:global __WALA__int3rnal__globalexample2.js [109->327] (line 12)
18   v6 = prototype_values(v7)               example2.js [245->259] (line 12) [7=[module]]
19   v28 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6example2.js [245->259] (line 12)
BB8
21   v29 = prototype_values(v7)              example2.js [261->275] (line 12) [7=[module]]
22   v30 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v29example2.js [261->275] (line 12)
BB9
23   v20 = invoke v21@23 v27,v28,v30,v7,v32:#example2.js,v33:#src/test/resources/small exception:v34example2.js [109->327] (line 12) [7=[module]]
BB10
25   v31 = prototype_values(v7)              example2.js [339->353] (line 14) [7=[module]]
26   v35 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v31example2.js [339->353] (line 14)
BB11
27   return v35                              example2.js [332->354] (line 14)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lexample2/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample2/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample2/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample2/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample2/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..15]
    -> BB2
    -> BB3
BB2[16..18]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     example2.js [109->243] (line 7) [8=[arguments]]
1   v10 = global:global $$undefined          example2.js [184->194] (line 8) [10=[a]]
3   v12 = global:global $$undefined          example2.js [195->209] (line 9) [12=[b]]
5   v14 = global:global $$undefined          example2.js [210->224] (line 10) [14=[c]]
8   v17 = binaryop(add) v16:#1.0 , v16:#1.0  example2.js [203->208] (line 9) [17=[b]16=[a]]
10   v18 = binaryop(add) v17 , v19:#2.0      example2.js [218->223] (line 10) [18=[c]17=[b]]
14   v24 = global:global console             example2.js [225->232] (line 11) [24=[$$destructure$rcvr3]]
15   check v24                               example2.js [225->232] (line 11) [24=[$$destructure$rcvr3]]
BB2
18   v26 = dispatch v25:#log@18 v24,v18 exception:v27example2.js [225->239] (line 11) [25=[$$destructure$elt3]24=[$$destructure$rcvr3]18=[c]]
BB3


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4
