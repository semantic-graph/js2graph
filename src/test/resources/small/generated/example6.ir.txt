<Code body of function Lexample6>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     example6.js [0->371] (line 1) [1=[arguments]]
1   v6 = global:global Function              example6.js [1->370] (line 13)
2   v3 = construct v6@2 v5:#Lexample6/nodejsModule exception:v4example6.js [1->370] (line 13)
3   v11 = global:global __WALA__int3rnal__globalexample6.js [1->370] (line 13)
4   v2 = invoke v3@4 v11 exception:v12       example6.js [1->370] (line 13)
BB2


<ctor for <JavaScriptLoader,LFunction>(Lexample6/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample6/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample6/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example6.js [1->367] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           example6.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                example6.js [41->103] (line 2)
4   check v9                                 example6.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        example6.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             example6.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lexample6/nodejsModule/__WALA__require exception:v13example6.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     example6.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               example6.js [98->100] (line 4)
10   check v18                               example6.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    example6.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    example6.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            example6.js [109->338] (line 10)
15   v21 = construct v24@15 v23:#Lexample6/nodejsModule/moduleSource exception:v22example6.js [109->338] (line 10)
16   v27 = global:global __WALA__int3rnal__globalexample6.js [109->338] (line 10)
18   v6 = prototype_values(v7)               example6.js [256->270] (line 10) [7=[module]]
19   v28 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6example6.js [256->270] (line 10)
BB8
21   v29 = prototype_values(v7)              example6.js [272->286] (line 10) [7=[module]]
22   v30 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v29example6.js [272->286] (line 10)
BB9
23   v20 = invoke v21@23 v27,v28,v30,v7,v32:#example6.js,v33:#src/test/resources/small exception:v34example6.js [109->338] (line 10) [7=[module]]
BB10
25   v31 = prototype_values(v7)              example6.js [350->364] (line 12) [7=[module]]
26   v35 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v31example6.js [350->364] (line 12)
BB11
27   return v35                              example6.js [343->365] (line 12)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lexample6/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample6/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample6/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample6/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample6/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB5
BB2[5..9]
    -> BB3
    -> BB5
BB3[10..16]
    -> BB4
    -> BB5
BB4[17..17]
    -> BB5
BB5[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     example6.js [109->254] (line 7) [8=[arguments]]
1   v10 = global:global $$undefined          example6.js [184->218] (line 8) [10=[util, $$destructure$rcvr5]]
3   v14 = global:global __WALA__int3rnal__globalexample6.js [197->217] (line 8)
4   v12 = invoke v4@4 v14,v15:#./util.js exception:v16example6.js [197->217] (line 8) [12=[util, $$destructure$rcvr5]4=[require]]
BB2
8   v21 = global:global console              example6.js [219->226] (line 9) [21=[$$destructure$rcvr4]]
9   check v21                                example6.js [219->226] (line 9) [21=[$$destructure$rcvr4]]
BB3
16   v27 = dispatch v26:#getName@16 v12,v28:#Jim exception:v29example6.js [231->250] (line 9) [26=[$$destructure$elt5]12=[util, $$destructure$rcvr5]]
BB4
17   v23 = dispatch v22:#log@17 v21,v27 exception:v30example6.js [219->251] (line 9) [22=[$$destructure$elt4]21=[$$destructure$rcvr4]]
BB5


<Code body of function Lutil/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     util.js [1->412] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           util.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                util.js [41->103] (line 2)
4   check v9                                 util.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        util.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             util.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lutil/nodejsModule/__WALA__require exception:v13util.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     util.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               util.js [98->100] (line 4)
10   check v18                               util.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    util.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    util.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            util.js [109->383] (line 13)
15   v21 = construct v24@15 v23:#Lutil/nodejsModule/moduleSource exception:v22util.js [109->383] (line 13)
16   v26 = global:global __WALA__int3rnal__globalutil.js [109->383] (line 13)
18   v6 = prototype_values(v7)               util.js [258->272] (line 13) [7=[module]]
19   v27 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6util.js [258->272] (line 13)
BB8
21   v28 = prototype_values(v7)              util.js [274->288] (line 13) [7=[module]]
22   v29 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v28util.js [274->288] (line 13)
BB9
23   v20 = invoke v21@23 v26,v27,v29,v7,v31:#util.js,v32:#/Users/zhen/projects/semantic-graph/js2graph/src/test/resources/small/. exception:v33util.js [109->383] (line 13) [7=[module]]
BB10
25   v30 = prototype_values(v7)              util.js [395->409] (line 15) [7=[module]]
26   v34 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v30util.js [395->409] (line 15)
BB11
27   return v34                              util.js [388->410] (line 15)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lutil/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lutil/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lutil/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lutil/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lutil/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..6]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     util.js [109->256] (line 7) [8=[arguments]]
1   v10 = global:global $$undefined          util.js [184->225] (line 8) [10=[getName]]
3   v15 = global:global Function             util.js [184->225] (line 8)
4   v12 = construct v15@4 v14:#Lutil/nodejsModule/moduleSource/util@201 exception:v13util.js [184->225] (line 8) [12=[getName]]
6   fieldref v3.v16:#getName = v12 = v12     util.js [227->252] (line 12) [3=[exports]12=[getName]]
BB2


<ctor for <JavaScriptLoader,LFunction>(Lutil/nodejsModule/moduleSource/util@201)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lutil/nodejsModule/moduleSource/util@201>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lutil/nodejsModule/moduleSource/util@201>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     util.js [201->224] (line 8) [4=[arguments]]
1   return v3                                util.js [213->222] (line 9) [3=[x]]
BB2


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4
