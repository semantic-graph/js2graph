<Code body of function Lexample>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     example.js [0->689] (line 1) [1=[arguments]]
1   v6 = global:global Function              example.js [1->688] (line 32)
2   v3 = construct v6@2 v5:#Lexample/nodejsModule exception:v4example.js [1->688] (line 32)
3   v11 = global:global __WALA__int3rnal__globalexample.js [1->688] (line 32)
4   v2 = invoke v3@4 v11 exception:v12       example.js [1->688] (line 32)
BB2


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example.js [1->685] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           example.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                example.js [41->103] (line 2)
4   check v9                                 example.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        example.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             example.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lexample/nodejsModule/__WALA__require exception:v13example.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     example.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               example.js [98->100] (line 4)
10   check v18                               example.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    example.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    example.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            example.js [109->656] (line 29)
15   v21 = construct v24@15 v23:#Lexample/nodejsModule/moduleSource exception:v22example.js [109->656] (line 29)
16   v27 = global:global __WALA__int3rnal__globalexample.js [109->656] (line 29)
18   v6 = prototype_values(v7)               example.js [575->589] (line 29) [7=[module]]
19   v28 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6example.js [575->589] (line 29)
BB8
21   v29 = prototype_values(v7)              example.js [591->605] (line 29) [7=[module]]
22   v30 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v29example.js [591->605] (line 29)
BB9
23   v20 = invoke v21@23 v27,v28,v30,v7,v32:#example.js,v33:#src/test/resources/small exception:v34example.js [109->656] (line 29) [7=[module]]
BB10
25   v31 = prototype_values(v7)              example.js [668->682] (line 31) [7=[module]]
26   v35 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v31example.js [668->682] (line 31)
BB11
27   return v35                              example.js [661->683] (line 31)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     example.js [109->573] (line 7) [8=[arguments]]
1   v12 = global:global Function             example.js [109->573] (line 7)
2   v9 = construct v12@2 v11:#Lexample/nodejsModule/moduleSource/main exception:v10example.js [109->573] (line 7) [9=[main]]
3   v16 = global:global __WALA__int3rnal__globalexample.js [563->569] (line 28)
4   v14 = invoke v9@4 v16 exception:v17      example.js [563->569] (line 28) [9=[main]]
BB2


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/moduleSource/main)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/moduleSource/main>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample/nodejsModule/moduleSource/main>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..10]
    -> BB2
    -> BB4
BB2[11..14]
    -> BB3
    -> BB4
BB3[15..15]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example.js [184->383] (line 8) [3=[arguments]]
1   v7 = global:global Function              example.js [184->383] (line 8)
2   v4 = construct v7@2 v6:#Lexample/nodejsModule/moduleSource/main/f exception:v5example.js [184->383] (line 8) [4=[f]]
3   v11 = global:global Function             example.js [184->383] (line 8)
4   v8 = construct v11@4 v10:#Lexample/nodejsModule/moduleSource/main/g exception:v9example.js [184->383] (line 8) [8=[g]]
5   v15 = global:global Function             example.js [184->383] (line 8)
6   v12 = construct v15@6 v14:#Lexample/nodejsModule/moduleSource/main/h exception:v13example.js [184->383] (line 8) [12=[h]]
9   v20 = global:global console              example.js [364->371] (line 23) [20=[$$destructure$rcvr5]]
10   check v20                               example.js [364->371] (line 23) [20=[$$destructure$rcvr5]]
BB2
13   v25 = global:global __WALA__int3rnal__globalexample.js [376->379] (line 23)
14   v23 = invoke v12@14 v25 exception:v26   example.js [376->379] (line 23) [12=[h]]
BB3
15   v22 = dispatch v21:#log@15 v20,v23 exception:v27example.js [364->380] (line 23) [21=[$$destructure$elt5]20=[$$destructure$rcvr5]]
BB4


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/moduleSource/main/f)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/moduleSource/main/f>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/moduleSource/main/g)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/moduleSource/main/g>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample/nodejsModule/moduleSource/main/h)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample/nodejsModule/moduleSource/main/h>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample/nodejsModule/moduleSource/main/h>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..6]
    -> BB2
    -> BB6
BB2[7..8]
    -> BB3
    -> BB6
BB3[9..11]
    -> BB4
    -> BB6
BB4[12..13]
    -> BB5
    -> BB6
BB5[14..16]
    -> BB6
BB6[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example.js [285->360] (line 17) [3=[arguments]]
1   v5 = global:global $$undefined           example.js [304->317] (line 18) [5=[x]]
3   v7 = global:global $$undefined           example.js [322->338] (line 19) [7=[y]]
5   v11 = lexical:f@Lexample/nodejsModule/moduleSource/mainexample.js [312->313] (line 18)
6   check v11                                example.js [312->313] (line 18)
BB2
7   v13 = global:global __WALA__int3rnal__globalexample.js [312->316] (line 18)
8   v9 = invoke v11@8 v13,v14:#1.0 exception:v15example.js [312->316] (line 18) [9=[x]]
BB3
10   v18 = lexical:g@Lexample/nodejsModule/moduleSource/mainexample.js [330->331] (line 19)
11   check v18                               example.js [330->331] (line 19)
BB4
12   v19 = global:global __WALA__int3rnal__globalexample.js [330->337] (line 19)
13   v16 = invoke v18@13 v19,v20:#2.0,v21:#3.0 exception:v22example.js [330->337] (line 19) [16=[y]]
BB5
15   v23 = binaryop(add) v9 , v16            example.js [350->355] (line 20) [9=[x]16=[y]]
16   return v23                              example.js [343->356] (line 20)
BB6


<Code body of function Lexample/nodejsModule/moduleSource/main/f>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     example.js [204->237] (line 9) [4=[arguments]]
1   return v3                                example.js [224->233] (line 10) [3=[x]]
BB2


<Code body of function Lexample/nodejsModule/moduleSource/main/g>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..2]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v5 = new <JavaScriptLoader,LArray>@0     example.js [241->281] (line 13) [5=[arguments]]
1   v6 = binaryop(add) v3 , v4               example.js [271->276] (line 14) [3=[x]4=[y]]
2   return v6                                example.js [264->277] (line 14)
BB2


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4
