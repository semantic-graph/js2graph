<Code body of function Lexample8>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     example8.js [0->435] (line 1) [1=[arguments]]
1   v6 = global:global Function              example8.js [1->434] (line 17)
2   v3 = construct v6@2 v5:#Lexample8/nodejsModule exception:v4example8.js [1->434] (line 17)
3   v11 = global:global __WALA__int3rnal__globalexample8.js [1->434] (line 17)
4   v2 = invoke v3@4 v11 exception:v12       example8.js [1->434] (line 17)
BB2


<ctor for <JavaScriptLoader,LFunction>(Lexample8/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample8/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample8/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example8.js [1->431] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           example8.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                example8.js [41->103] (line 2)
4   check v9                                 example8.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        example8.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             example8.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lexample8/nodejsModule/__WALA__require exception:v13example8.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     example8.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               example8.js [98->100] (line 4)
10   check v18                               example8.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    example8.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    example8.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            example8.js [109->402] (line 14)
15   v21 = construct v24@15 v23:#Lexample8/nodejsModule/moduleSource exception:v22example8.js [109->402] (line 14)
16   v27 = global:global __WALA__int3rnal__globalexample8.js [109->402] (line 14)
18   v6 = prototype_values(v7)               example8.js [310->324] (line 14) [7=[module]]
19   v28 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6example8.js [310->324] (line 14)
BB8
21   v29 = prototype_values(v7)              example8.js [326->340] (line 14) [7=[module]]
22   v30 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v29example8.js [326->340] (line 14)
BB9
23   v20 = invoke v21@23 v27,v28,v30,v7,v32:#example8.js,v33:#src/test/resources/small/generated exception:v34example8.js [109->402] (line 14) [7=[module]]
BB10
25   v31 = prototype_values(v7)              example8.js [414->428] (line 16) [7=[module]]
26   v35 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v31example8.js [414->428] (line 16)
BB11
27   return v35                              example8.js [407->429] (line 16)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lexample8/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample8/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lexample8/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample8/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample8/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..2]
    -> BB2
    -> BB8
BB2[3..3]
    -> BB3
    -> BB8
BB3[4..6]
    -> BB4
    -> BB8
BB4[7..7]
    -> BB5
    -> BB8
BB5[8..12]
    -> BB6
    -> BB8
BB6[13..17]
    -> BB7
    -> BB8
BB7[18..20]
    -> BB8
BB8[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     example8.js [109->308] (line 7) [8=[arguments]]
1   v11 = global:global Object               example8.js [201->259] (line 8)
2   check v11                                example8.js [201->259] (line 8)
BB2
3   v9 = construct v11@3 exception:v12       example8.js [201->259] (line 8)
BB3
4   v17 = global:global Function             example8.js [201->259] (line 8)
5   v14 = construct v17@5 v16:#Lexample8/nodejsModule/moduleSource/example8@218:randomAPI exception:v15example8.js [201->259] (line 8)
6   fieldref v9.v13:#randomAPI = v14 = v14   example8.js [201->259] (line 8) [13=[$$destructure$elt5]]
BB4
7   fieldref v5.v19:#exports = v9 = v9       example8.js [184->259] (line 8) [5=[module]19=[$$destructure$elt4]]
BB5
12   v23 = dispatch v19:#exports@12 v5 exception:v24example8.js [260->276] (line 12) [19=[$$destructure$elt4]5=[module]]
BB6
16   v21 = prototype_values(v5)              example8.js [278->292] (line 13) [5=[module]]
17   v27 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v21example8.js [278->292] (line 13) [27=[$$destructure$rcvr5]]
BB7
20   v29 = dispatch v13:#randomAPI@20 v27 exception:v30example8.js [278->304] (line 13) [13=[$$destructure$elt5]27=[$$destructure$rcvr5]]
BB8


<ctor for <JavaScriptLoader,LFunction>(Lexample8/nodejsModule/moduleSource/example8@218:randomAPI)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lexample8/nodejsModule/moduleSource/example8@218:randomAPI>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lexample8/nodejsModule/moduleSource/example8@218:randomAPI>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB3
BB2[5..7]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     example8.js [218->257] (line 9) [3=[arguments]]
3   v8 = global:global console               example8.js [234->241] (line 10) [8=[$$destructure$rcvr3]]
4   check v8                                 example8.js [234->241] (line 10) [8=[$$destructure$rcvr3]]
BB2
7   v10 = dispatch v9:#log@7 v8,v11:#1.0 exception:v12example8.js [234->250] (line 10) [9=[$$destructure$elt3]8=[$$destructure$rcvr3]]
BB3


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4
