<Code body of function Lindex.js>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..33]
    -> BB2
    -> BB62
BB2[34..35]
    -> BB3
    -> BB62
BB3[36..38]
    -> BB4
    -> BB62
BB4[39..40]
    -> BB5
    -> BB62
BB5[41..43]
    -> BB6
    -> BB62
BB6[44..45]
    -> BB7
    -> BB62
BB7[46..48]
    -> BB8
    -> BB62
BB8[49..50]
    -> BB9
    -> BB62
BB9[51..53]
    -> BB10
    -> BB62
BB10[54..55]
    -> BB11
    -> BB62
BB11[56..58]
    -> BB12
    -> BB62
BB12[59..60]
    -> BB13
    -> BB62
BB13[61..63]
    -> BB14
    -> BB62
BB14[64..65]
    -> BB15
    -> BB62
BB15[66..68]
    -> BB16
    -> BB62
BB16[69..70]
    -> BB17
    -> BB62
BB17[71..73]
    -> BB18
    -> BB62
BB18[74..75]
    -> BB19
    -> BB62
BB19[76..78]
    -> BB20
    -> BB62
BB20[79..80]
    -> BB21
    -> BB62
BB21[81..83]
    -> BB22
    -> BB62
BB22[84..85]
    -> BB23
    -> BB62
BB23[86..88]
    -> BB24
    -> BB62
BB24[89..90]
    -> BB25
    -> BB62
BB25[91..93]
    -> BB26
    -> BB62
BB26[94..94]
    -> BB27
    -> BB62
BB27[95..97]
    -> BB28
    -> BB62
BB28[98..98]
    -> BB29
    -> BB62
BB29[99..101]
    -> BB30
    -> BB62
BB30[102..103]
    -> BB31
    -> BB62
BB31[104..104]
    -> BB32
    -> BB62
BB32[105..106]
    -> BB33
    -> BB62
BB33[107..108]
    -> BB34
    -> BB62
BB34[109..110]
    -> BB35
    -> BB62
BB35[111..112]
    -> BB36
    -> BB62
BB36[113..114]
    -> BB37
    -> BB62
BB37[115..116]
    -> BB38
    -> BB62
BB38[117..118]
    -> BB39
    -> BB62
BB39[119..120]
    -> BB40
    -> BB62
BB40[121..122]
    -> BB41
    -> BB62
BB41[123..124]
    -> BB42
    -> BB62
BB42[125..126]
    -> BB43
    -> BB62
BB43[127..128]
    -> BB44
    -> BB62
BB44[129..130]
    -> BB45
    -> BB62
BB45[131..132]
    -> BB46
    -> BB62
BB46[133..134]
    -> BB47
    -> BB62
BB47[135..136]
    -> BB48
    -> BB62
BB48[137..138]
    -> BB49
    -> BB62
BB49[139..140]
    -> BB50
    -> BB62
BB50[141..142]
    -> BB51
    -> BB62
BB51[143..144]
    -> BB52
    -> BB62
BB52[145..146]
    -> BB53
    -> BB62
BB53[147..148]
    -> BB54
    -> BB62
BB54[149..150]
    -> BB55
    -> BB62
BB55[151..152]
    -> BB56
    -> BB62
BB56[153..154]
    -> BB57
    -> BB62
BB57[155..156]
    -> BB58
    -> BB62
BB58[157..158]
    -> BB59
    -> BB62
BB59[159..160]
    -> BB60
    -> BB62
BB60[161..162]
    -> BB61
    -> BB62
BB61[163..164]
    -> BB62
BB62[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     index.js [0->8179] (line 1) [1=[arguments]]
1   v3 = global:global $$undefined           index.js [14->85] (line 2)
2   lexical:conventionalCommitsParser@Lindex.js = v3index.js [14->85] (line 2)
3   v5 = global:global $$undefined           index.js [86->161] (line 3)
4   lexical:conventionalChangelogWriter@Lindex.js = v5index.js [86->161] (line 3)
5   v7 = global:global $$undefined           index.js [162->201] (line 4)
6   lexical:dateFormat@Lindex.js = v7        index.js [162->201] (line 4)
7   v9 = global:global $$undefined           index.js [202->225] (line 5)
8   lexical:fs@Lindex.js = v9                index.js [202->225] (line 5)
9   v11 = global:global $$undefined          index.js [226->267] (line 6)
10   lexical:getPkgRepo@Lindex.js = v11      index.js [226->267] (line 6)
11   v13 = global:global $$undefined         index.js [268->315] (line 7)
12   lexical:gitRawCommits@Lindex.js = v13   index.js [268->315] (line 7)
13   v15 = global:global $$undefined         index.js [316->363] (line 8)
14   lexical:gitSemverTags@Lindex.js = v15   index.js [316->363] (line 8)
15   v17 = global:global $$undefined         index.js [364->385] (line 9)
16   lexical:Q@Lindex.js = v17               index.js [364->385] (line 9)
17   v19 = global:global $$undefined         index.js [386->417] (line 10)
18   lexical:stream@Lindex.js = v19          index.js [386->417] (line 10)
19   v21 = global:global $$undefined         index.js [418->452] (line 11)
20   lexical:through@Lindex.js = v21         index.js [418->452] (line 11)
21   v23 = global:global $$undefined         index.js [453->478] (line 12)
22   lexical:url@Lindex.js = v23             index.js [453->478] (line 12)
23   v25 = global:global $$undefined         index.js [479->505] (line 13)
24   lexical:_@Lindex.js = v25               index.js [479->505] (line 13)
25   v27 = global:global $$undefined         index.js [507->547] (line 15)
26   lexical:rhosts@Lindex.js = v27          index.js [507->547] (line 15)
27   v29 = global:global $$undefined         index.js [548->586] (line 16)
28   lexical:rtag@Lindex.js = v29            index.js [548->586] (line 16)
29   v34 = global:global Function            index.js [0->8179] (line 1)
30   v31 = construct v34@30 v33:#Lindex.js/conventionalChangelog exception:v32index.js [0->8179] (line 1)
31   global:global conventionalChangelog = v31index.js [0->8179] (line 1)
32   v39 = global:global require             index.js [46->53] (line 2)
33   check v39                               index.js [46->53] (line 2)
BB2
34   v41 = global:global __WALA__int3rnal__globalindex.js [46->84] (line 2)
35   v37 = invoke v39@35 v41,v42:#conventional-commits-parser exception:v43index.js [46->84] (line 2)
BB3
36   lexical:conventionalCommitsParser@Lindex.js = v37index.js [14->85] (line 2)
37   v45 = global:global require             index.js [120->127] (line 3)
38   check v45                               index.js [120->127] (line 3)
BB4
39   v46 = global:global __WALA__int3rnal__globalindex.js [120->160] (line 3)
40   v44 = invoke v45@40 v46,v47:#conventional-changelog-writer exception:v48index.js [120->160] (line 3)
BB5
41   lexical:conventionalChangelogWriter@Lindex.js = v44index.js [86->161] (line 3)
42   v50 = global:global require             index.js [179->186] (line 4)
43   check v50                               index.js [179->186] (line 4)
BB6
44   v51 = global:global __WALA__int3rnal__globalindex.js [179->200] (line 4)
45   v49 = invoke v50@45 v51,v52:#dateformat exception:v53index.js [179->200] (line 4)
BB7
46   lexical:dateFormat@Lindex.js = v49      index.js [162->201] (line 4)
47   v55 = global:global require             index.js [211->218] (line 5)
48   check v55                               index.js [211->218] (line 5)
BB8
49   v56 = global:global __WALA__int3rnal__globalindex.js [211->224] (line 5)
50   v54 = invoke v55@50 v56,v57:#fs exception:v58index.js [211->224] (line 5)
BB9
51   lexical:fs@Lindex.js = v54              index.js [202->225] (line 5)
52   v60 = global:global require             index.js [243->250] (line 6)
53   check v60                               index.js [243->250] (line 6)
BB10
54   v61 = global:global __WALA__int3rnal__globalindex.js [243->266] (line 6)
55   v59 = invoke v60@55 v61,v62:#get-pkg-repo exception:v63index.js [243->266] (line 6)
BB11
56   lexical:getPkgRepo@Lindex.js = v59      index.js [226->267] (line 6)
57   v65 = global:global require             index.js [288->295] (line 7)
58   check v65                               index.js [288->295] (line 7)
BB12
59   v66 = global:global __WALA__int3rnal__globalindex.js [288->314] (line 7)
60   v64 = invoke v65@60 v66,v67:#git-raw-commits exception:v68index.js [288->314] (line 7)
BB13
61   lexical:gitRawCommits@Lindex.js = v64   index.js [268->315] (line 7)
62   v70 = global:global require             index.js [336->343] (line 8)
63   check v70                               index.js [336->343] (line 8)
BB14
64   v71 = global:global __WALA__int3rnal__globalindex.js [336->362] (line 8)
65   v69 = invoke v70@65 v71,v72:#git-semver-tags exception:v73index.js [336->362] (line 8)
BB15
66   lexical:gitSemverTags@Lindex.js = v69   index.js [316->363] (line 8)
67   v75 = global:global require             index.js [372->379] (line 9)
68   check v75                               index.js [372->379] (line 9)
BB16
69   v76 = global:global __WALA__int3rnal__globalindex.js [372->384] (line 9)
70   v74 = invoke v75@70 v76,v77:#q exception:v78index.js [372->384] (line 9)
BB17
71   lexical:Q@Lindex.js = v74               index.js [364->385] (line 9)
72   v80 = global:global require             index.js [399->406] (line 10)
73   check v80                               index.js [399->406] (line 10)
BB18
74   v81 = global:global __WALA__int3rnal__globalindex.js [399->416] (line 10)
75   v79 = invoke v80@75 v81,v82:#stream exception:v83index.js [399->416] (line 10)
BB19
76   lexical:stream@Lindex.js = v79          index.js [386->417] (line 10)
77   v85 = global:global require             index.js [432->439] (line 11)
78   check v85                               index.js [432->439] (line 11)
BB20
79   v86 = global:global __WALA__int3rnal__globalindex.js [432->451] (line 11)
80   v84 = invoke v85@80 v86,v87:#through2 exception:v88index.js [432->451] (line 11)
BB21
81   lexical:through@Lindex.js = v84         index.js [418->452] (line 11)
82   v90 = global:global require             index.js [463->470] (line 12)
83   check v90                               index.js [463->470] (line 12)
BB22
84   v91 = global:global __WALA__int3rnal__globalindex.js [463->477] (line 12)
85   v89 = invoke v90@85 v91,v92:#url exception:v93index.js [463->477] (line 12)
BB23
86   lexical:url@Lindex.js = v89             index.js [453->478] (line 12)
87   v95 = global:global require             index.js [487->494] (line 13)
88   check v95                               index.js [487->494] (line 13)
BB24
89   v96 = global:global __WALA__int3rnal__globalindex.js [487->504] (line 13)
90   v94 = invoke v95@90 v96,v97:#lodash exception:v98index.js [487->504] (line 13)
BB25
91   lexical:_@Lindex.js = v94               index.js [479->505] (line 13)
92   v101 = global:global RegExp             index.js [520->546] (line 15)
93   check v101                              index.js [520->546] (line 15)
BB26
94   v99 = construct v101@94 v102:#i,v103:#github|bitbucket|gitlab exception:v104index.js [520->546] (line 15)
BB27
95   lexical:rhosts@Lindex.js = v99          index.js [507->547] (line 15)
96   v106 = global:global RegExp             index.js [559->585] (line 16)
97   check v106                              index.js [559->585] (line 16)
BB28
98   v105 = construct v106@98 v107:#gi,v108:#tag:\s*[v=]?(.+?)[,\)] exception:v109index.js [559->585] (line 16)
BB29
99   lexical:rtag@Lindex.js = v105           index.js [548->586] (line 16)
100   v111 = global:global conventionalChangelogindex.js [7782->7803] (line 257)
101   check v111                             index.js [7782->7803] (line 257)
BB30
102   v113 = global:global module            index.js [7765->7771] (line 257)
103   check v113                             index.js [7765->7771] (line 257)
BB31
104   fieldref v113.v114:#exports = v111 = v111index.js [7765->7803] (line 257)
BB32
105   v116 = global:global conventionalChangelogindex.js [7805->7826] (line 258)
106   check v116                             index.js [7805->7826] (line 258)
BB33
107   v117 = global:global __WALA__int3rnal__globalindex.js [7805->7828] (line 258)
108   v115 = invoke v116@108 v117 exception:v118index.js [7805->7828] (line 258)
BB34
109   v120 = global:global conventionalChangelogindex.js [7830->7851] (line 259)
110   check v120                             index.js [7830->7851] (line 259)
BB35
111   v121 = global:global __WALA__int3rnal__globalindex.js [7830->7853] (line 259)
112   v119 = invoke v120@112 v121 exception:v122index.js [7830->7853] (line 259)
BB36
113   v124 = global:global conventionalChangelogindex.js [7855->7876] (line 260)
114   check v124                             index.js [7855->7876] (line 260)
BB37
115   v125 = global:global __WALA__int3rnal__globalindex.js [7855->7878] (line 260)
116   v123 = invoke v124@116 v125 exception:v126index.js [7855->7878] (line 260)
BB38
117   v128 = global:global conventionalChangelogindex.js [7880->7901] (line 261)
118   check v128                             index.js [7880->7901] (line 261)
BB39
119   v129 = global:global __WALA__int3rnal__globalindex.js [7880->7903] (line 261)
120   v127 = invoke v128@120 v129 exception:v130index.js [7880->7903] (line 261)
BB40
121   v132 = global:global conventionalChangelogindex.js [7905->7926] (line 262)
122   check v132                             index.js [7905->7926] (line 262)
BB41
123   v133 = global:global __WALA__int3rnal__globalindex.js [7905->7928] (line 262)
124   v131 = invoke v132@124 v133 exception:v134index.js [7905->7928] (line 262)
BB42
125   v136 = global:global conventionalChangelogindex.js [7930->7951] (line 263)
126   check v136                             index.js [7930->7951] (line 263)
BB43
127   v137 = global:global __WALA__int3rnal__globalindex.js [7930->7953] (line 263)
128   v135 = invoke v136@128 v137 exception:v138index.js [7930->7953] (line 263)
BB44
129   v140 = global:global conventionalChangelogindex.js [7955->7976] (line 264)
130   check v140                             index.js [7955->7976] (line 264)
BB45
131   v141 = global:global __WALA__int3rnal__globalindex.js [7955->7978] (line 264)
132   v139 = invoke v140@132 v141 exception:v142index.js [7955->7978] (line 264)
BB46
133   v144 = global:global conventionalChangelogindex.js [7980->8001] (line 265)
134   check v144                             index.js [7980->8001] (line 265)
BB47
135   v145 = global:global __WALA__int3rnal__globalindex.js [7980->8003] (line 265)
136   v143 = invoke v144@136 v145 exception:v146index.js [7980->8003] (line 265)
BB48
137   v148 = global:global conventionalChangelogindex.js [8005->8026] (line 266)
138   check v148                             index.js [8005->8026] (line 266)
BB49
139   v149 = global:global __WALA__int3rnal__globalindex.js [8005->8028] (line 266)
140   v147 = invoke v148@140 v149 exception:v150index.js [8005->8028] (line 266)
BB50
141   v152 = global:global conventionalChangelogindex.js [8030->8051] (line 267)
142   check v152                             index.js [8030->8051] (line 267)
BB51
143   v153 = global:global __WALA__int3rnal__globalindex.js [8030->8053] (line 267)
144   v151 = invoke v152@144 v153 exception:v154index.js [8030->8053] (line 267)
BB52
145   v156 = global:global conventionalChangelogindex.js [8055->8076] (line 268)
146   check v156                             index.js [8055->8076] (line 268)
BB53
147   v157 = global:global __WALA__int3rnal__globalindex.js [8055->8078] (line 268)
148   v155 = invoke v156@148 v157 exception:v158index.js [8055->8078] (line 268)
BB54
149   v160 = global:global conventionalChangelogindex.js [8080->8101] (line 269)
150   check v160                             index.js [8080->8101] (line 269)
BB55
151   v161 = global:global __WALA__int3rnal__globalindex.js [8080->8103] (line 269)
152   v159 = invoke v160@152 v161 exception:v162index.js [8080->8103] (line 269)
BB56
153   v164 = global:global conventionalChangelogindex.js [8105->8126] (line 270)
154   check v164                             index.js [8105->8126] (line 270)
BB57
155   v165 = global:global __WALA__int3rnal__globalindex.js [8105->8128] (line 270)
156   v163 = invoke v164@156 v165 exception:v166index.js [8105->8128] (line 270)
BB58
157   v168 = global:global conventionalChangelogindex.js [8130->8151] (line 271)
158   check v168                             index.js [8130->8151] (line 271)
BB59
159   v169 = global:global __WALA__int3rnal__globalindex.js [8130->8153] (line 271)
160   v167 = invoke v168@160 v169 exception:v170index.js [8130->8153] (line 271)
BB60
161   v172 = global:global conventionalChangelogindex.js [8155->8176] (line 272)
162   check v172                             index.js [8155->8176] (line 272)
BB61
163   v173 = global:global __WALA__int3rnal__globalindex.js [8155->8178] (line 272)
164   v171 = invoke v172@164 v173 exception:v174index.js [8155->8178] (line 272)
BB62


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lindex.js/conventionalChangelog>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..22]
    -> BB3
    -> BB2
BB2[23..24]
    -> BB6
BB3[25..26]
    -> BB4
    -> BB73
BB4[27..27]
    -> BB5
    -> BB73
BB5[28..28]
    -> BB6
BB6[29..31]
    -> BB7
    -> BB73
BB7[32..34]
    -> BB8
    -> BB73
BB8[35..36]
    -> BB9
    -> BB73
BB9[37..37]
    -> BB10
    -> BB73
BB10[38..41]
    -> BB11
    -> BB73
BB11[42..42]
    -> BB12
    -> BB73
BB12[43..43]
    -> BB13
    -> BB73
BB13[44..48]
    -> BB14
    -> BB73
BB14[49..51]
    -> BB16
    -> BB15
BB15[52..53]
    -> BB19
BB16[54..55]
    -> BB17
    -> BB73
BB17[56..56]
    -> BB18
    -> BB73
BB18[57..57]
    -> BB19
BB19[58..61]
    -> BB21
    -> BB20
BB20[62..63]
    -> BB24
BB21[64..65]
    -> BB22
    -> BB73
BB22[66..66]
    -> BB23
    -> BB73
BB23[67..67]
    -> BB24
BB24[68..72]
    -> BB25
    -> BB73
BB25[73..76]
    -> BB26
    -> BB73
BB26[77..77]
    -> BB27
    -> BB73
BB27[78..79]
    -> BB28
    -> BB73
BB28[80..80]
    -> BB29
    -> BB73
BB29[81..81]
    -> BB30
    -> BB73
BB30[82..84]
    -> BB31
    -> BB73
BB31[85..85]
    -> BB32
    -> BB73
BB32[86..86]
    -> BB33
    -> BB73
BB33[87..87]
    -> BB34
    -> BB73
BB34[88..90]
    -> BB35
    -> BB73
BB35[91..93]
    -> BB36
    -> BB73
BB36[94..95]
    -> BB37
    -> BB73
BB37[96..100]
    -> BB38
    -> BB73
BB38[101..101]
    -> BB40
    -> BB39
BB39[102..103]
    -> BB43
BB40[104..105]
    -> BB41
    -> BB73
BB41[106..106]
    -> BB42
    -> BB73
BB42[107..107]
    -> BB43
BB43[108..109]
    -> BB44
    -> BB73
BB44[110..113]
    -> BB45
    -> BB73
BB45[114..116]
    -> BB54
    -> BB46
BB46[117..118]
    -> BB47
    -> BB73
BB47[119..123]
    -> BB48
    -> BB52
BB48[124..125]
    -> BB49
    -> BB52
BB49[126..130]
    -> BB50
    -> BB73
BB50[131..133]
    -> BB51
    -> BB52
BB51[134..135]
    -> BB54
BB52[136..147]
    -> BB53
    -> BB73
BB53[148..150]
    -> BB54
    -> BB73
BB54[151..154]
    -> BB55
    -> BB73
BB55[155..158]
    -> BB56
    -> BB73
BB56[159..161]
    -> BB57
    -> BB73
BB57[162..165]
    -> BB58
    -> BB73
BB58[166..168]
    -> BB59
    -> BB73
BB59[169..169]
    -> BB60
    -> BB73
BB60[170..174]
    -> BB61
    -> BB73
BB61[175..178]
    -> BB62
    -> BB73
BB62[179..179]
    -> BB63
    -> BB73
BB63[180..188]
    -> BB64
    -> BB73
BB64[189..192]
    -> BB65
    -> BB73
BB65[193..193]
    -> BB66
    -> BB73
BB66[194..194]
    -> BB67
    -> BB73
BB67[195..195]
    -> BB68
    -> BB73
BB68[196..196]
    -> BB69
    -> BB73
BB69[197..197]
    -> BB70
    -> BB73
BB70[198..202]
    -> BB71
    -> BB73
BB71[203..207]
    -> BB72
    -> BB73
BB72[208..209]
    -> BB73
BB73[-1..-2]
Instructions:
BB0
BB1
0   lexical:options@Lindex.js/conventionalChangelog = v3index.js [588->7763] (line 18) [3=[options]]
1   lexical:context@Lindex.js/conventionalChangelog = v4index.js [588->7763] (line 18) [4=[context]]
2   lexical:gitRawCommitsOpts@Lindex.js/conventionalChangelog = v5index.js [588->7763] (line 18) [5=[gitRawCommitsOpts]]
3   lexical:parserOpts@Lindex.js/conventionalChangelog = v6index.js [588->7763] (line 18) [6=[parserOpts]]
4   lexical:writerOpts@Lindex.js/conventionalChangelog = v7index.js [588->7763] (line 18) [7=[writerOpts]]
5   v8 = new <JavaScriptLoader,LArray>@5     index.js [588->7763] (line 18) [8=[arguments]]
6   v10 = global:global $$undefined          index.js [684->702] (line 19) [10=[presetPromise]]
8   v12 = global:global $$undefined          index.js [705->720] (line 20) [12=[pkgPromise]]
10   v14 = global:global $$undefined         index.js [723->745] (line 21) [14=[semverTagsPromise]]
12   v16 = global:global $$undefined         index.js [783->867] (line 25)
13   lexical:readable@Lindex.js/conventionalChangelog = v16index.js [783->867] (line 25)
14   v18 = global:global $$undefined         index.js [1622->1654] (line 62)
15   lexical:loadPreset@Lindex.js/conventionalChangelog = v18index.js [1622->1654] (line 62)
16   v20 = global:global $$undefined         index.js [1680->1911] (line 65) [20=[err]]
18   v22 = global:global $$undefined         index.js [1692->1746] (line 66) [22=[presetFn]]
20   v25 = lexical:writerOpts@Lindex.js/conventionalChangelogindex.js [762->772] (line 23)
22   conditional branch(eq, to iindex=25) v25,v28:#0index.js [762->778] (line 23)
BB2
24   goto (from iindex= 24 to iindex = 29)   index.js [762->778] (line 23)
BB3
25   v31 = global:global Object              index.js [776->778] (line 23)
26   check v31                               index.js [776->778] (line 23)
BB4
27   v29 = construct v31@27 exception:v32    index.js [776->778] (line 23)
BB5
BB6
           v11 = phi  v25,v29
29   lexical:writerOpts@Lindex.js/conventionalChangelog = v11index.js [749->778] (line 23)
30   v36 = lexical:stream@Lindex.js          index.js [802->808] (line 25)
31   check v36                               index.js [802->808] (line 25)
BB7
33   v13 = prototype_values(v36)             index.js [802->817] (line 25)
34   v34 = getfield < JavaScriptLoader, LRoot, Readable, <JavaScriptLoader,LRoot> > v13index.js [802->817] (line 25)
BB8
35   v40 = global:global Object              index.js [818->865] (line 25)
36   check v40                               index.js [818->865] (line 25)
BB9
37   v39 = construct v40@37 exception:v41    index.js [818->865] (line 25)
BB10
38   v44 = lexical:writerOpts@Lindex.js/conventionalChangelogindex.js [836->846] (line 26)
40   v15 = prototype_values(v44)             index.js [836->861] (line 26)
41   v43 = getfield < JavaScriptLoader, LRoot, includeDetails, <JavaScriptLoader,LRoot> > v15index.js [836->861] (line 26)
BB11
42   fieldref v39.v42:#objectMode = v43 = v43index.js [818->865] (line 25)
BB12
43   v33 = construct v34@43 v39 exception:v47index.js [798->866] (line 25)
BB13
44   lexical:readable@Lindex.js/conventionalChangelog = v33index.js [783->867] (line 25)
45   v51 = global:global Function            index.js [870->900] (line 28)
46   v48 = construct v51@46 v50:#Lindex.js/conventionalChangelog/index.js@887 exception:v49index.js [870->900] (line 28)
47   v52 = lexical:readable@Lindex.js/conventionalChangelogindex.js [870->878] (line 28)
48   fieldref v52.v53:#_read = v48 = v48     index.js [870->900] (line 28)
BB14
49   v54 = lexical:context@Lindex.js/conventionalChangelogindex.js [915->922] (line 30)
51   conditional branch(eq, to iindex=54) v54,v28:#0index.js [915->928] (line 30)
BB15
53   goto (from iindex= 53 to iindex = 58)   index.js [915->928] (line 30)
BB16
54   v58 = global:global Object              index.js [926->928] (line 30)
55   check v58                               index.js [926->928] (line 30)
BB17
56   v57 = construct v58@56 exception:v59    index.js [926->928] (line 30)
BB18
BB19
           v21 = phi  v54,v57
58   lexical:context@Lindex.js/conventionalChangelog = v21index.js [905->928] (line 30)
59   v60 = lexical:gitRawCommitsOpts@Lindex.js/conventionalChangelogindex.js [952->969] (line 31)
61   conditional branch(eq, to iindex=64) v60,v28:#0index.js [952->975] (line 31)
BB20
63   goto (from iindex= 63 to iindex = 68)   index.js [952->975] (line 31)
BB21
64   v64 = global:global Object              index.js [973->975] (line 31)
65   check v64                               index.js [973->975] (line 31)
BB22
66   v63 = construct v64@66 exception:v65    index.js [973->975] (line 31)
BB23
BB24
           v23 = phi  v60,v63
68   lexical:gitRawCommitsOpts@Lindex.js/conventionalChangelog = v23index.js [932->975] (line 31)
71   v69 = lexical:_@Lindex.js               index.js [990->991] (line 33) [69=[$$destructure$rcvr13]]
72   check v69                               index.js [990->991] (line 33) [69=[$$destructure$rcvr13]]
BB25
75   v73 = global:global Object              index.js [998->1572] (line 33)
76   check v73                               index.js [998->1572] (line 33)
BB26
77   v72 = construct v73@77 exception:v74    index.js [998->1572] (line 33)
BB27
78   v77 = global:global Object              index.js [1009->1105] (line 34)
79   check v77                               index.js [1009->1105] (line 34)
BB28
80   v76 = construct v77@80 exception:v78    index.js [1009->1105] (line 34)
BB29
81   fieldref v76.v79:#path = v80:#package.json = v80:#package.jsonindex.js [1009->1105] (line 34)
BB30
82   v85 = global:global Function            index.js [1009->1105] (line 34)
83   v82 = construct v85@83 v84:#Lindex.js/conventionalChangelog/index.js@1056:transform exception:v83index.js [1009->1105] (line 34)
84   fieldref v76.v81:#transform = v82 = v82 index.js [1009->1105] (line 34)
BB31
85   fieldref v72.v75:#pkg = v76 = v76       index.js [998->1572] (line 33)
BB32
86   fieldref v72.v86:#append = v87:#false = v87:#falseindex.js [998->1572] (line 33)
BB33
87   fieldref v72.v88:#releaseCount = v89:#1.0 = v89:#1.0index.js [998->1572] (line 33)
BB34
88   v94 = global:global Function            index.js [998->1572] (line 33)
89   v91 = construct v94@89 v93:#Lindex.js/conventionalChangelog/index.js@1157:warn exception:v92index.js [998->1572] (line 33)
90   fieldref v72.v90:#warn = v91 = v91      index.js [998->1572] (line 33) [90=[$$destructure$elt17]]
BB35
91   v98 = global:global Function            index.js [998->1572] (line 33)
92   v95 = construct v98@92 v97:#Lindex.js/conventionalChangelog/index.js@1187:transform exception:v96index.js [998->1572] (line 33)
93   fieldref v72.v81:#transform = v95 = v95 index.js [998->1572] (line 33)
BB36
94   v102 = lexical:options@Lindex.js/conventionalChangelogindex.js [1574->1581] (line 59)
95   v71 = dispatch v70:#merge@95 v69,v72,v102 exception:v103index.js [990->1582] (line 33) [70=[$$destructure$elt13]69=[$$destructure$rcvr13]]
BB37
96   lexical:options@Lindex.js/conventionalChangelog = v71index.js [980->1582] (line 33)
97   v105 = lexical:options@Lindex.js/conventionalChangelogindex.js [1601->1608] (line 61)
99   v26 = prototype_values(v105)            index.js [1601->1612] (line 61)
100   v104 = getfield < JavaScriptLoader, LRoot, pkg, <JavaScriptLoader,LRoot> > v26index.js [1601->1612] (line 61)
BB38
101   conditional branch(eq, to iindex=104) v104,v28:#0index.js [1601->1618] (line 61)
BB39
103   goto (from iindex= 103 to iindex = 108)index.js [1601->1618] (line 61)
BB40
104   v109 = global:global Object            index.js [1616->1618] (line 61)
105   check v109                             index.js [1616->1618] (line 61)
BB41
106   v108 = construct v109@106 exception:v110index.js [1616->1618] (line 61)
BB42
BB43
           v27 = phi  v104,v108
108   v111 = lexical:options@Lindex.js/conventionalChangelogindex.js [1587->1594] (line 61)
109   fieldref v111.v75:#pkg = v27 = v27     index.js [1587->1618] (line 61)
BB44
110   v113 = lexical:options@Lindex.js/conventionalChangelogindex.js [1639->1646] (line 62)
112   v38 = prototype_values(v113)           index.js [1639->1653] (line 62)
113   v112 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v38index.js [1639->1653] (line 62)
BB45
114   lexical:loadPreset@Lindex.js/conventionalChangelog = v112index.js [1622->1654] (line 62)
115   v116 = lexical:loadPreset@Lindex.js/conventionalChangelogindex.js [1662->1672] (line 64)
116   conditional branch(eq, to iindex=151) v116,v28:#0index.js [1658->1915] (line 64)
BB46
117   v119 = global:global require           index.js [1707->1714] (line 66)
118   check v119                             index.js [1707->1714] (line 66)
BB47
119   v120 = global:global __WALA__int3rnal__globalindex.js [1707->1745] (line 66)
120   v124 = lexical:options@Lindex.js/conventionalChangelogindex.js [1730->1737] (line 66)
122   v46 = prototype_values(v124)           index.js [1730->1744] (line 66)
123   v123 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v46index.js [1730->1744] (line 66)
BB48
124   v121 = binaryop(add) v122:#./presets/ , v123index.js [1715->1744] (line 66)
125   v117 = invoke v119@125 v120,v121 exception:v126index.js [1707->1745] (line 66) [117=[presetFn]]
BB49
129   v130 = lexical:Q@Lindex.js             index.js [1769->1770] (line 67) [130=[$$destructure$rcvr19]]
130   check v130                             index.js [1769->1770] (line 67) [130=[$$destructure$rcvr19]]
BB50
133   v132 = dispatch v131:#nfcall@133 v130,v117 exception:v133index.js [1769->1787] (line 67) [132=[presetPromise]131=[$$destructure$elt21]130=[$$destructure$rcvr19]117=[presetFn]]
BB51
135   goto (from iindex= 135 to iindex = 151)index.js [1680->1911] (line 65)
BB52<Handler> (<JavaScriptLoader,LRoot>)
           v134 = getCaughtException 
138   lexical:loadPreset@Lindex.js/conventionalChangelog = v87:#falseindex.js [1815->1833] (line 69)
141   v137 = lexical:options@Lindex.js/conventionalChangelogindex.js [1841->1848] (line 70) [137=[$$destructure$rcvr17]]
144   v143 = lexical:options@Lindex.js/conventionalChangelogindex.js [1868->1875] (line 70)
146   v55 = prototype_values(v143)           index.js [1868->1882] (line 70)
147   v142 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v55index.js [1868->1882] (line 70)
BB53
148   v140 = binaryop(add) v141:#Preset: " , v142index.js [1854->1882] (line 70)
149   v139 = binaryop(add) v140 , v145:#" does not existindex.js [1854->1903] (line 70)
150   v138 = dispatch v90:#warn@150 v137,v139 exception:v146index.js [1841->1904] (line 70) [90=[$$destructure$elt17]137=[$$destructure$rcvr17]]
BB54
           v56 = phi  v10,v132,v10
153   v149 = lexical:Q@Lindex.js             index.js [1932->1933] (line 74) [149=[$$destructure$rcvr20]]
154   check v149                             index.js [1932->1933] (line 74) [149=[$$destructure$rcvr20]]
BB55
157   v153 = lexical:fs@Lindex.js            index.js [1941->1943] (line 74)
158   check v153                             index.js [1941->1943] (line 74)
BB56
160   v61 = prototype_values(v153)           index.js [1941->1952] (line 74)
161   v151 = getfield < JavaScriptLoader, LRoot, readFile, <JavaScriptLoader,LRoot> > v61index.js [1941->1952] (line 74)
BB57
162   v158 = lexical:options@Lindex.js/conventionalChangelogindex.js [1954->1961] (line 74)
164   v62 = prototype_values(v158)           index.js [1954->1965] (line 74)
165   v157 = getfield < JavaScriptLoader, LRoot, pkg, <JavaScriptLoader,LRoot> > v62index.js [1954->1965] (line 74)
BB58
167   v66 = prototype_values(v157)           index.js [1954->1970] (line 74)
168   v156 = getfield < JavaScriptLoader, LRoot, path, <JavaScriptLoader,LRoot> > v66index.js [1954->1970] (line 74)
BB59
169   v150 = dispatch v131:#nfcall@169 v149,v151,v156,v161:#utf8 exception:v162index.js [1932->1979] (line 74) [150=[pkgPromise]131=[$$destructure$elt21]149=[$$destructure$rcvr20]]
BB60
173   v165 = lexical:Q@Lindex.js             index.js [2004->2005] (line 76) [165=[$$destructure$rcvr21]]
174   check v165                             index.js [2004->2005] (line 76) [165=[$$destructure$rcvr21]]
BB61
177   v168 = lexical:gitSemverTags@Lindex.js index.js [2013->2026] (line 76)
178   check v168                             index.js [2013->2026] (line 76)
BB62
179   v166 = dispatch v131:#nfcall@179 v165,v168 exception:v169index.js [2004->2027] (line 76) [166=[semverTagsPromise]131=[$$destructure$elt21]165=[$$destructure$rcvr21]]
BB63
187   v176 = lexical:Q@Lindex.js             index.js [2032->2033] (line 78) [176=[$$destructure$rcvr24]]
188   check v176                             index.js [2032->2033] (line 78) [176=[$$destructure$rcvr24]]
BB64
191   v181 = global:global Array             index.js [2045->2091] (line 78)
192   check v181                             index.js [2045->2091] (line 78)
BB65
193   v179 = construct v181@193 exception:v182index.js [2045->2091] (line 78)
BB66
194   fieldref v179.v183:#0 = v56 = v56      index.js [2045->2091] (line 78) [56=[presetPromise]]
BB67
195   fieldref v179.v184:#1 = v150 = v150    index.js [2045->2091] (line 78) [150=[pkgPromise]]
BB68
196   fieldref v179.v185:#2 = v166 = v166    index.js [2045->2091] (line 78) [166=[semverTagsPromise]]
BB69
197   v178 = dispatch v177:#allSettled@197 v176,v179 exception:v186index.js [2032->2092] (line 78) [178=[$$destructure$rcvr23]177=[$$destructure$elt24]176=[$$destructure$rcvr24]]
BB70
200   v192 = global:global Function          index.js [2032->7642] (line 79)
201   v189 = construct v192@201 v191:#Lindex.js/conventionalChangelog/index.js@2105 exception:v190index.js [2032->7642] (line 79)
202   v188 = dispatch v187:#spread@202 v178,v189 exception:v202index.js [2032->7642] (line 79) [188=[$$destructure$rcvr22]187=[$$destructure$elt23]178=[$$destructure$rcvr23]]
BB71
205   v208 = global:global Function          index.js [2032->7740] (line 250)
206   v205 = construct v208@206 v207:#Lindex.js/conventionalChangelog/index.js@7654 exception:v206index.js [2032->7740] (line 250)
207   v204 = dispatch v203:#catch@207 v188,v205 exception:v210index.js [2032->7740] (line 250) [203=[$$destructure$elt22]188=[$$destructure$rcvr22]]
BB72
208   v211 = lexical:readable@Lindex.js/conventionalChangelogindex.js [7752->7760] (line 254)
209   return v211                            index.js [7745->7761] (line 254)
BB73


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@887)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@887>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@1056:transform)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@1056:transform>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@1157:warn)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@1157:warn>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@1187:transform)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@1187:transform>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@2105)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@2105>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex.js/conventionalChangelog/index.js@7654)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex.js/conventionalChangelog/index.js@7654>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LArray>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..2]
    -> BB2
    -> BB4
BB2[3..4]
    -> BB3
BB3[5..5]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = fieldref v1.v3:#prototype           
2   v5 = new <JavaScriptLoader,LArray>@2     
BB2
3   set_prototype(v5, v4)                    
4   putfield v5.< JavaScriptLoader, LRoot, length, <JavaScriptLoader,LRoot> > = v7:#0
BB3
5   return v5                                
BB4
