<Code body of function Lindex>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     index.js [0->8206] (line 1) [1=[arguments]]
1   v6 = global:global Function              index.js [1->8205] (line 269)
2   v3 = construct v6@2 v5:#Lindex/nodejsModule exception:v4index.js [1->8205] (line 269)
3   v14 = global:global __WALA__int3rnal__globalindex.js [1->8205] (line 269)
4   v2 = invoke v3@4 v14 exception:v15       index.js [1->8205] (line 269)
BB2


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lindex/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     index.js [1->8202] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           index.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                index.js [41->103] (line 2)
4   check v9                                 index.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        index.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             index.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#Lindex/nodejsModule/__WALA__require exception:v13index.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     index.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               index.js [98->100] (line 4)
10   check v18                               index.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    index.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    index.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            index.js [109->8173] (line 266)
15   v21 = construct v24@15 v23:#Lindex/nodejsModule/moduleSource exception:v22index.js [109->8173] (line 266)
16   v30 = global:global __WALA__int3rnal__globalindex.js [109->8173] (line 266)
18   v6 = prototype_values(v7)               index.js [8011->8025] (line 266) [7=[module]]
19   v31 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6index.js [8011->8025] (line 266)
BB8
21   v32 = prototype_values(v7)              index.js [8027->8041] (line 266) [7=[module]]
22   v33 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v32index.js [8027->8041] (line 266)
BB9
23   v20 = invoke v21@23 v30,v31,v33,v7,v35:#index.js,v36:#/Users/zhen/projects/semantic-graph/js2graph/src/test/resources/regression/conventional-changelog/generated exception:v37index.js [109->8173] (line 266) [7=[module]]
BB10
25   v34 = prototype_values(v7)              index.js [8185->8199] (line 268) [7=[module]]
26   v38 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v34index.js [8185->8199] (line 268)
BB11
27   return v38                              index.js [8178->8200] (line 268)
BB12


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lindex/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..34]
    -> BB2
    -> BB19
BB2[35..38]
    -> BB3
    -> BB19
BB3[39..42]
    -> BB4
    -> BB19
BB4[43..46]
    -> BB5
    -> BB19
BB5[47..50]
    -> BB6
    -> BB19
BB6[51..54]
    -> BB7
    -> BB19
BB7[55..58]
    -> BB8
    -> BB19
BB8[59..62]
    -> BB9
    -> BB19
BB9[63..66]
    -> BB10
    -> BB19
BB10[67..70]
    -> BB11
    -> BB19
BB11[71..74]
    -> BB12
    -> BB19
BB12[75..78]
    -> BB13
    -> BB19
BB13[79..81]
    -> BB14
    -> BB19
BB14[82..82]
    -> BB15
    -> BB19
BB15[83..85]
    -> BB16
    -> BB19
BB16[86..86]
    -> BB17
    -> BB19
BB17[87..88]
    -> BB18
    -> BB19
BB18[89..93]
    -> BB19
BB19[-1..-2]
Instructions:
BB0
BB1
0   lexical:require@Lindex/nodejsModule/moduleSource = v4index.js [109->8009] (line 7) [4=[require]]
1   v8 = new <JavaScriptLoader,LArray>@1     index.js [109->8009] (line 7) [8=[arguments]]
2   v10 = global:global $$undefined          index.js [198->269] (line 9)
3   lexical:conventionalCommitsParser@Lindex/nodejsModule/moduleSource = v10index.js [198->269] (line 9)
4   v12 = global:global $$undefined          index.js [270->345] (line 10)
5   lexical:conventionalChangelogWriter@Lindex/nodejsModule/moduleSource = v12index.js [270->345] (line 10)
6   v14 = global:global $$undefined          index.js [346->385] (line 11)
7   lexical:dateFormat@Lindex/nodejsModule/moduleSource = v14index.js [346->385] (line 11)
8   v16 = global:global $$undefined          index.js [386->409] (line 12)
9   lexical:fs@Lindex/nodejsModule/moduleSource = v16index.js [386->409] (line 12)
10   v18 = global:global $$undefined         index.js [410->451] (line 13)
11   lexical:getPkgRepo@Lindex/nodejsModule/moduleSource = v18index.js [410->451] (line 13)
12   v20 = global:global $$undefined         index.js [452->499] (line 14)
13   lexical:gitRawCommits@Lindex/nodejsModule/moduleSource = v20index.js [452->499] (line 14)
14   v22 = global:global $$undefined         index.js [500->547] (line 15)
15   lexical:gitSemverTags@Lindex/nodejsModule/moduleSource = v22index.js [500->547] (line 15)
16   v24 = global:global $$undefined         index.js [548->569] (line 16)
17   lexical:Q@Lindex/nodejsModule/moduleSource = v24index.js [548->569] (line 16)
18   v26 = global:global $$undefined         index.js [570->601] (line 17)
19   lexical:stream@Lindex/nodejsModule/moduleSource = v26index.js [570->601] (line 17)
20   v28 = global:global $$undefined         index.js [602->636] (line 18)
21   lexical:through@Lindex/nodejsModule/moduleSource = v28index.js [602->636] (line 18)
22   v30 = global:global $$undefined         index.js [637->662] (line 19)
23   lexical:url@Lindex/nodejsModule/moduleSource = v30index.js [637->662] (line 19)
24   v32 = global:global $$undefined         index.js [663->689] (line 20)
25   lexical:_@Lindex/nodejsModule/moduleSource = v32index.js [663->689] (line 20)
26   v34 = global:global $$undefined         index.js [691->731] (line 22)
27   lexical:rhosts@Lindex/nodejsModule/moduleSource = v34index.js [691->731] (line 22)
28   v36 = global:global $$undefined         index.js [732->770] (line 23)
29   lexical:rtag@Lindex/nodejsModule/moduleSource = v36index.js [732->770] (line 23)
30   v41 = global:global Function            index.js [109->8009] (line 7)
31   v38 = construct v41@31 v40:#Lindex/nodejsModule/moduleSource/conventionalChangelog exception:v39index.js [109->8009] (line 7) [38=[conventionalChangelog]]
32   v44 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [230->237] (line 9)
33   v46 = global:global __WALA__int3rnal__globalindex.js [230->268] (line 9)
34   v43 = invoke v44@34 v46,v47:#conventional-commits-parser exception:v48index.js [230->268] (line 9)
BB2
35   lexical:conventionalCommitsParser@Lindex/nodejsModule/moduleSource = v43index.js [198->269] (line 9)
36   v50 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [304->311] (line 10)
37   v51 = global:global __WALA__int3rnal__globalindex.js [304->344] (line 10)
38   v49 = invoke v50@38 v51,v52:#conventional-changelog-writer exception:v53index.js [304->344] (line 10)
BB3
39   lexical:conventionalChangelogWriter@Lindex/nodejsModule/moduleSource = v49index.js [270->345] (line 10)
40   v55 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [363->370] (line 11)
41   v56 = global:global __WALA__int3rnal__globalindex.js [363->384] (line 11)
42   v54 = invoke v55@42 v56,v57:#dateformat exception:v58index.js [363->384] (line 11)
BB4
43   lexical:dateFormat@Lindex/nodejsModule/moduleSource = v54index.js [346->385] (line 11)
44   v60 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [395->402] (line 12)
45   v61 = global:global __WALA__int3rnal__globalindex.js [395->408] (line 12)
46   v59 = invoke v60@46 v61,v62:#fs exception:v63index.js [395->408] (line 12)
BB5
47   lexical:fs@Lindex/nodejsModule/moduleSource = v59index.js [386->409] (line 12)
48   v65 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [427->434] (line 13)
49   v66 = global:global __WALA__int3rnal__globalindex.js [427->450] (line 13)
50   v64 = invoke v65@50 v66,v67:#get-pkg-repo exception:v68index.js [427->450] (line 13)
BB6
51   lexical:getPkgRepo@Lindex/nodejsModule/moduleSource = v64index.js [410->451] (line 13)
52   v70 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [472->479] (line 14)
53   v71 = global:global __WALA__int3rnal__globalindex.js [472->498] (line 14)
54   v69 = invoke v70@54 v71,v72:#git-raw-commits exception:v73index.js [472->498] (line 14)
BB7
55   lexical:gitRawCommits@Lindex/nodejsModule/moduleSource = v69index.js [452->499] (line 14)
56   v75 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [520->527] (line 15)
57   v76 = global:global __WALA__int3rnal__globalindex.js [520->546] (line 15)
58   v74 = invoke v75@58 v76,v77:#git-semver-tags exception:v78index.js [520->546] (line 15)
BB8
59   lexical:gitSemverTags@Lindex/nodejsModule/moduleSource = v74index.js [500->547] (line 15)
60   v80 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [556->563] (line 16)
61   v81 = global:global __WALA__int3rnal__globalindex.js [556->568] (line 16)
62   v79 = invoke v80@62 v81,v82:#q exception:v83index.js [556->568] (line 16)
BB9
63   lexical:Q@Lindex/nodejsModule/moduleSource = v79index.js [548->569] (line 16)
64   v85 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [583->590] (line 17)
65   v86 = global:global __WALA__int3rnal__globalindex.js [583->600] (line 17)
66   v84 = invoke v85@66 v86,v87:#stream exception:v88index.js [583->600] (line 17)
BB10
67   lexical:stream@Lindex/nodejsModule/moduleSource = v84index.js [570->601] (line 17)
68   v90 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [616->623] (line 18)
69   v91 = global:global __WALA__int3rnal__globalindex.js [616->635] (line 18)
70   v89 = invoke v90@70 v91,v92:#through2 exception:v93index.js [616->635] (line 18)
BB11
71   lexical:through@Lindex/nodejsModule/moduleSource = v89index.js [602->636] (line 18)
72   v95 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [647->654] (line 19)
73   v96 = global:global __WALA__int3rnal__globalindex.js [647->661] (line 19)
74   v94 = invoke v95@74 v96,v97:#url exception:v98index.js [647->661] (line 19)
BB12
75   lexical:url@Lindex/nodejsModule/moduleSource = v94index.js [637->662] (line 19)
76   v100 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [671->678] (line 20)
77   v101 = global:global __WALA__int3rnal__globalindex.js [671->688] (line 20)
78   v99 = invoke v100@78 v101,v102:#lodash exception:v103index.js [671->688] (line 20)
BB13
79   lexical:_@Lindex/nodejsModule/moduleSource = v99index.js [663->689] (line 20)
80   v106 = global:global RegExp             index.js [704->730] (line 22)
81   check v106                              index.js [704->730] (line 22)
BB14
82   v104 = construct v106@82 v107:#i,v108:#github|bitbucket|gitlab exception:v109index.js [704->730] (line 22)
BB15
83   lexical:rhosts@Lindex/nodejsModule/moduleSource = v104index.js [691->731] (line 22)
84   v111 = global:global RegExp             index.js [743->769] (line 23)
85   check v111                              index.js [743->769] (line 23)
BB16
86   v110 = construct v111@86 v112:#gi,v113:#tag:\s*[v=]?(.+?)[,\)] exception:v114index.js [743->769] (line 23)
BB17
87   lexical:rtag@Lindex/nodejsModule/moduleSource = v110index.js [732->770] (line 23)
88   fieldref v5.v116:#exports = v38 = v38   index.js [7949->7987] (line 264) [5=[module, $$destructure$rcvr69]116=[$$destructure$elt69]38=[conventionalChangelog]]
BB18
93   v119 = dispatch v116:#exports@93 v5 exception:v120index.js [7989->8005] (line 265) [116=[$$destructure$elt69]5=[module, $$destructure$rcvr69]]
BB19


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<Code body of function Lindex/nodejsModule/moduleSource/conventionalChangelog>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..22]
    -> BB3
    -> BB2
BB2[23..24]
    -> BB6
BB3[25..26]
    -> BB4
    -> BB73
BB4[27..27]
    -> BB5
    -> BB73
BB5[28..28]
    -> BB6
BB6[29..31]
    -> BB7
    -> BB73
BB7[32..34]
    -> BB8
    -> BB73
BB8[35..36]
    -> BB9
    -> BB73
BB9[37..37]
    -> BB10
    -> BB73
BB10[38..41]
    -> BB11
    -> BB73
BB11[42..42]
    -> BB12
    -> BB73
BB12[43..43]
    -> BB13
    -> BB73
BB13[44..48]
    -> BB14
    -> BB73
BB14[49..51]
    -> BB16
    -> BB15
BB15[52..53]
    -> BB19
BB16[54..55]
    -> BB17
    -> BB73
BB17[56..56]
    -> BB18
    -> BB73
BB18[57..57]
    -> BB19
BB19[58..61]
    -> BB21
    -> BB20
BB20[62..63]
    -> BB24
BB21[64..65]
    -> BB22
    -> BB73
BB22[66..66]
    -> BB23
    -> BB73
BB23[67..67]
    -> BB24
BB24[68..72]
    -> BB25
    -> BB73
BB25[73..76]
    -> BB26
    -> BB73
BB26[77..77]
    -> BB27
    -> BB73
BB27[78..79]
    -> BB28
    -> BB73
BB28[80..80]
    -> BB29
    -> BB73
BB29[81..81]
    -> BB30
    -> BB73
BB30[82..84]
    -> BB31
    -> BB73
BB31[85..85]
    -> BB32
    -> BB73
BB32[86..86]
    -> BB33
    -> BB73
BB33[87..87]
    -> BB34
    -> BB73
BB34[88..90]
    -> BB35
    -> BB73
BB35[91..93]
    -> BB36
    -> BB73
BB36[94..95]
    -> BB37
    -> BB73
BB37[96..100]
    -> BB38
    -> BB73
BB38[101..101]
    -> BB40
    -> BB39
BB39[102..103]
    -> BB43
BB40[104..105]
    -> BB41
    -> BB73
BB41[106..106]
    -> BB42
    -> BB73
BB42[107..107]
    -> BB43
BB43[108..109]
    -> BB44
    -> BB73
BB44[110..113]
    -> BB45
    -> BB73
BB45[114..116]
    -> BB54
    -> BB46
BB46[117..118]
    -> BB47
    -> BB73
BB47[119..123]
    -> BB48
    -> BB52
BB48[124..125]
    -> BB49
    -> BB52
BB49[126..130]
    -> BB50
    -> BB73
BB50[131..133]
    -> BB51
    -> BB52
BB51[134..135]
    -> BB54
BB52[136..147]
    -> BB53
    -> BB73
BB53[148..150]
    -> BB54
    -> BB73
BB54[151..154]
    -> BB55
    -> BB73
BB55[155..158]
    -> BB56
    -> BB73
BB56[159..161]
    -> BB57
    -> BB73
BB57[162..165]
    -> BB58
    -> BB73
BB58[166..168]
    -> BB59
    -> BB73
BB59[169..169]
    -> BB60
    -> BB73
BB60[170..174]
    -> BB61
    -> BB73
BB61[175..178]
    -> BB62
    -> BB73
BB62[179..179]
    -> BB63
    -> BB73
BB63[180..188]
    -> BB64
    -> BB73
BB64[189..192]
    -> BB65
    -> BB73
BB65[193..193]
    -> BB66
    -> BB73
BB66[194..194]
    -> BB67
    -> BB73
BB67[195..195]
    -> BB68
    -> BB73
BB68[196..196]
    -> BB69
    -> BB73
BB69[197..197]
    -> BB70
    -> BB73
BB70[198..202]
    -> BB71
    -> BB73
BB71[203..207]
    -> BB72
    -> BB73
BB72[208..209]
    -> BB73
BB73[-1..-2]
Instructions:
BB0
BB1
0   lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelog = v3index.js [772->7947] (line 25) [3=[options]]
1   lexical:context@Lindex/nodejsModule/moduleSource/conventionalChangelog = v4index.js [772->7947] (line 25) [4=[context]]
2   lexical:gitRawCommitsOpts@Lindex/nodejsModule/moduleSource/conventionalChangelog = v5index.js [772->7947] (line 25) [5=[gitRawCommitsOpts]]
3   lexical:parserOpts@Lindex/nodejsModule/moduleSource/conventionalChangelog = v6index.js [772->7947] (line 25) [6=[parserOpts]]
4   lexical:writerOpts@Lindex/nodejsModule/moduleSource/conventionalChangelog = v7index.js [772->7947] (line 25) [7=[writerOpts]]
5   v8 = new <JavaScriptLoader,LArray>@5     index.js [772->7947] (line 25) [8=[arguments]]
6   v10 = global:global $$undefined          index.js [868->886] (line 26) [10=[presetPromise]]
8   v12 = global:global $$undefined          index.js [889->904] (line 27) [12=[pkgPromise]]
10   v14 = global:global $$undefined         index.js [907->929] (line 28) [14=[semverTagsPromise]]
12   v16 = global:global $$undefined         index.js [967->1051] (line 32)
13   lexical:readable@Lindex/nodejsModule/moduleSource/conventionalChangelog = v16index.js [967->1051] (line 32)
14   v18 = global:global $$undefined         index.js [1806->1838] (line 69)
15   lexical:loadPreset@Lindex/nodejsModule/moduleSource/conventionalChangelog = v18index.js [1806->1838] (line 69)
16   v20 = global:global $$undefined         index.js [1864->2095] (line 72) [20=[err]]
18   v22 = global:global $$undefined         index.js [1876->1930] (line 73) [22=[presetFn]]
20   v25 = lexical:writerOpts@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [946->956] (line 30)
22   conditional branch(eq, to iindex=25) v25,v28:#0index.js [946->962] (line 30)
BB2
24   goto (from iindex= 24 to iindex = 29)   index.js [946->962] (line 30)
BB3
25   v31 = global:global Object              index.js [960->962] (line 30)
26   check v31                               index.js [960->962] (line 30)
BB4
27   v29 = construct v31@27 exception:v32    index.js [960->962] (line 30)
BB5
BB6
           v11 = phi  v25,v29
29   lexical:writerOpts@Lindex/nodejsModule/moduleSource/conventionalChangelog = v11index.js [933->962] (line 30)
30   v36 = lexical:stream@Lindex/nodejsModule/moduleSourceindex.js [986->992] (line 32)
31   check v36                               index.js [986->992] (line 32)
BB7
33   v13 = prototype_values(v36)             index.js [986->1001] (line 32)
34   v34 = getfield < JavaScriptLoader, LRoot, Readable, <JavaScriptLoader,LRoot> > v13index.js [986->1001] (line 32)
BB8
35   v40 = global:global Object              index.js [1002->1049] (line 32)
36   check v40                               index.js [1002->1049] (line 32)
BB9
37   v39 = construct v40@37 exception:v41    index.js [1002->1049] (line 32)
BB10
38   v44 = lexical:writerOpts@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1020->1030] (line 33)
40   v15 = prototype_values(v44)             index.js [1020->1045] (line 33)
41   v43 = getfield < JavaScriptLoader, LRoot, includeDetails, <JavaScriptLoader,LRoot> > v15index.js [1020->1045] (line 33)
BB11
42   fieldref v39.v42:#objectMode = v43 = v43index.js [1002->1049] (line 32)
BB12
43   v33 = construct v34@43 v39 exception:v47index.js [982->1050] (line 32)
BB13
44   lexical:readable@Lindex/nodejsModule/moduleSource/conventionalChangelog = v33index.js [967->1051] (line 32)
45   v51 = global:global Function            index.js [1054->1084] (line 35)
46   v48 = construct v51@46 v50:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1071 exception:v49index.js [1054->1084] (line 35)
47   v52 = lexical:readable@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1054->1062] (line 35)
48   fieldref v52.v53:#_read = v48 = v48     index.js [1054->1084] (line 35)
BB14
49   v54 = lexical:context@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1099->1106] (line 37)
51   conditional branch(eq, to iindex=54) v54,v28:#0index.js [1099->1112] (line 37)
BB15
53   goto (from iindex= 53 to iindex = 58)   index.js [1099->1112] (line 37)
BB16
54   v58 = global:global Object              index.js [1110->1112] (line 37)
55   check v58                               index.js [1110->1112] (line 37)
BB17
56   v57 = construct v58@56 exception:v59    index.js [1110->1112] (line 37)
BB18
BB19
           v21 = phi  v54,v57
58   lexical:context@Lindex/nodejsModule/moduleSource/conventionalChangelog = v21index.js [1089->1112] (line 37)
59   v60 = lexical:gitRawCommitsOpts@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1136->1153] (line 38)
61   conditional branch(eq, to iindex=64) v60,v28:#0index.js [1136->1159] (line 38)
BB20
63   goto (from iindex= 63 to iindex = 68)   index.js [1136->1159] (line 38)
BB21
64   v64 = global:global Object              index.js [1157->1159] (line 38)
65   check v64                               index.js [1157->1159] (line 38)
BB22
66   v63 = construct v64@66 exception:v65    index.js [1157->1159] (line 38)
BB23
BB24
           v23 = phi  v60,v63
68   lexical:gitRawCommitsOpts@Lindex/nodejsModule/moduleSource/conventionalChangelog = v23index.js [1116->1159] (line 38)
71   v69 = lexical:_@Lindex/nodejsModule/moduleSourceindex.js [1174->1175] (line 40) [69=[$$destructure$rcvr15]]
72   check v69                               index.js [1174->1175] (line 40) [69=[$$destructure$rcvr15]]
BB25
75   v73 = global:global Object              index.js [1182->1756] (line 40)
76   check v73                               index.js [1182->1756] (line 40)
BB26
77   v72 = construct v73@77 exception:v74    index.js [1182->1756] (line 40)
BB27
78   v77 = global:global Object              index.js [1193->1289] (line 41)
79   check v77                               index.js [1193->1289] (line 41)
BB28
80   v76 = construct v77@80 exception:v78    index.js [1193->1289] (line 41)
BB29
81   fieldref v76.v79:#path = v80:#package.json = v80:#package.jsonindex.js [1193->1289] (line 41)
BB30
82   v85 = global:global Function            index.js [1193->1289] (line 41)
83   v82 = construct v85@83 v84:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1240:transform exception:v83index.js [1193->1289] (line 41)
84   fieldref v76.v81:#transform = v82 = v82 index.js [1193->1289] (line 41)
BB31
85   fieldref v72.v75:#pkg = v76 = v76       index.js [1182->1756] (line 40)
BB32
86   fieldref v72.v86:#append = v87:#false = v87:#falseindex.js [1182->1756] (line 40)
BB33
87   fieldref v72.v88:#releaseCount = v89:#1.0 = v89:#1.0index.js [1182->1756] (line 40)
BB34
88   v94 = global:global Function            index.js [1182->1756] (line 40)
89   v91 = construct v94@89 v93:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1341:warn exception:v92index.js [1182->1756] (line 40)
90   fieldref v72.v90:#warn = v91 = v91      index.js [1182->1756] (line 40) [90=[$$destructure$elt19]]
BB35
91   v98 = global:global Function            index.js [1182->1756] (line 40)
92   v95 = construct v98@92 v97:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1371:transform exception:v96index.js [1182->1756] (line 40)
93   fieldref v72.v81:#transform = v95 = v95 index.js [1182->1756] (line 40)
BB36
94   v102 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1758->1765] (line 66)
95   v71 = dispatch v70:#merge@95 v69,v72,v102 exception:v103index.js [1174->1766] (line 40) [70=[$$destructure$elt15]69=[$$destructure$rcvr15]]
BB37
96   lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelog = v71index.js [1164->1766] (line 40)
97   v105 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1785->1792] (line 68)
99   v26 = prototype_values(v105)            index.js [1785->1796] (line 68)
100   v104 = getfield < JavaScriptLoader, LRoot, pkg, <JavaScriptLoader,LRoot> > v26index.js [1785->1796] (line 68)
BB38
101   conditional branch(eq, to iindex=104) v104,v28:#0index.js [1785->1802] (line 68)
BB39
103   goto (from iindex= 103 to iindex = 108)index.js [1785->1802] (line 68)
BB40
104   v109 = global:global Object            index.js [1800->1802] (line 68)
105   check v109                             index.js [1800->1802] (line 68)
BB41
106   v108 = construct v109@106 exception:v110index.js [1800->1802] (line 68)
BB42
BB43
           v27 = phi  v104,v108
108   v111 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1771->1778] (line 68)
109   fieldref v111.v75:#pkg = v27 = v27     index.js [1771->1802] (line 68)
BB44
110   v113 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1823->1830] (line 69)
112   v38 = prototype_values(v113)           index.js [1823->1837] (line 69)
113   v112 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v38index.js [1823->1837] (line 69)
BB45
114   lexical:loadPreset@Lindex/nodejsModule/moduleSource/conventionalChangelog = v112index.js [1806->1838] (line 69)
115   v116 = lexical:loadPreset@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1846->1856] (line 71)
116   conditional branch(eq, to iindex=151) v116,v28:#0index.js [1842->2099] (line 71)
BB46
117   v119 = lexical:require@Lindex/nodejsModule/moduleSourceindex.js [1891->1898] (line 73)
118   check v119                             index.js [1891->1898] (line 73)
BB47
119   v120 = global:global __WALA__int3rnal__globalindex.js [1891->1929] (line 73)
120   v124 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [1914->1921] (line 73)
122   v46 = prototype_values(v124)           index.js [1914->1928] (line 73)
123   v123 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v46index.js [1914->1928] (line 73)
BB48
124   v121 = binaryop(add) v122:#./presets/ , v123index.js [1899->1928] (line 73)
125   v117 = invoke v119@125 v120,v121 exception:v126index.js [1891->1929] (line 73) [117=[presetFn]]
BB49
129   v130 = lexical:Q@Lindex/nodejsModule/moduleSourceindex.js [1953->1954] (line 74) [130=[$$destructure$rcvr21]]
130   check v130                             index.js [1953->1954] (line 74) [130=[$$destructure$rcvr21]]
BB50
133   v132 = dispatch v131:#nfcall@133 v130,v117 exception:v133index.js [1953->1971] (line 74) [132=[presetPromise]131=[$$destructure$elt23]130=[$$destructure$rcvr21]117=[presetFn]]
BB51
135   goto (from iindex= 135 to iindex = 151)index.js [1864->2095] (line 72)
BB52<Handler> (<JavaScriptLoader,LRoot>)
           v134 = getCaughtException 
138   lexical:loadPreset@Lindex/nodejsModule/moduleSource/conventionalChangelog = v87:#falseindex.js [1999->2017] (line 76)
141   v137 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [2025->2032] (line 77) [137=[$$destructure$rcvr19]]
144   v143 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [2052->2059] (line 77)
146   v55 = prototype_values(v143)           index.js [2052->2066] (line 77)
147   v142 = getfield < JavaScriptLoader, LRoot, preset, <JavaScriptLoader,LRoot> > v55index.js [2052->2066] (line 77)
BB53
148   v140 = binaryop(add) v141:#Preset: " , v142index.js [2038->2066] (line 77)
149   v139 = binaryop(add) v140 , v145:#" does not existindex.js [2038->2087] (line 77)
150   v138 = dispatch v90:#warn@150 v137,v139 exception:v146index.js [2025->2088] (line 77) [90=[$$destructure$elt19]137=[$$destructure$rcvr19]]
BB54
           v56 = phi  v10,v132,v10
153   v149 = lexical:Q@Lindex/nodejsModule/moduleSourceindex.js [2116->2117] (line 81) [149=[$$destructure$rcvr22]]
154   check v149                             index.js [2116->2117] (line 81) [149=[$$destructure$rcvr22]]
BB55
157   v153 = lexical:fs@Lindex/nodejsModule/moduleSourceindex.js [2125->2127] (line 81)
158   check v153                             index.js [2125->2127] (line 81)
BB56
160   v61 = prototype_values(v153)           index.js [2125->2136] (line 81)
161   v151 = getfield < JavaScriptLoader, LRoot, readFile, <JavaScriptLoader,LRoot> > v61index.js [2125->2136] (line 81)
BB57
162   v158 = lexical:options@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [2138->2145] (line 81)
164   v62 = prototype_values(v158)           index.js [2138->2149] (line 81)
165   v157 = getfield < JavaScriptLoader, LRoot, pkg, <JavaScriptLoader,LRoot> > v62index.js [2138->2149] (line 81)
BB58
167   v66 = prototype_values(v157)           index.js [2138->2154] (line 81)
168   v156 = getfield < JavaScriptLoader, LRoot, path, <JavaScriptLoader,LRoot> > v66index.js [2138->2154] (line 81)
BB59
169   v150 = dispatch v131:#nfcall@169 v149,v151,v156,v161:#utf8 exception:v162index.js [2116->2163] (line 81) [150=[pkgPromise]131=[$$destructure$elt23]149=[$$destructure$rcvr22]]
BB60
173   v165 = lexical:Q@Lindex/nodejsModule/moduleSourceindex.js [2188->2189] (line 83) [165=[$$destructure$rcvr23]]
174   check v165                             index.js [2188->2189] (line 83) [165=[$$destructure$rcvr23]]
BB61
177   v168 = lexical:gitSemverTags@Lindex/nodejsModule/moduleSourceindex.js [2197->2210] (line 83)
178   check v168                             index.js [2197->2210] (line 83)
BB62
179   v166 = dispatch v131:#nfcall@179 v165,v168 exception:v169index.js [2188->2211] (line 83) [166=[semverTagsPromise]131=[$$destructure$elt23]165=[$$destructure$rcvr23]]
BB63
187   v176 = lexical:Q@Lindex/nodejsModule/moduleSourceindex.js [2216->2217] (line 85) [176=[$$destructure$rcvr26]]
188   check v176                             index.js [2216->2217] (line 85) [176=[$$destructure$rcvr26]]
BB64
191   v181 = global:global Array             index.js [2229->2275] (line 85)
192   check v181                             index.js [2229->2275] (line 85)
BB65
193   v179 = construct v181@193 exception:v182index.js [2229->2275] (line 85)
BB66
194   fieldref v179.v183:#0 = v56 = v56      index.js [2229->2275] (line 85) [56=[presetPromise]]
BB67
195   fieldref v179.v184:#1 = v150 = v150    index.js [2229->2275] (line 85) [150=[pkgPromise]]
BB68
196   fieldref v179.v185:#2 = v166 = v166    index.js [2229->2275] (line 85) [166=[semverTagsPromise]]
BB69
197   v178 = dispatch v177:#allSettled@197 v176,v179 exception:v186index.js [2216->2276] (line 85) [178=[$$destructure$rcvr25]177=[$$destructure$elt26]176=[$$destructure$rcvr26]]
BB70
200   v192 = global:global Function          index.js [2216->7826] (line 86)
201   v189 = construct v192@201 v191:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@2289 exception:v190index.js [2216->7826] (line 86)
202   v188 = dispatch v187:#spread@202 v178,v189 exception:v202index.js [2216->7826] (line 86) [188=[$$destructure$rcvr24]187=[$$destructure$elt25]178=[$$destructure$rcvr25]]
BB71
205   v208 = global:global Function          index.js [2216->7924] (line 257)
206   v205 = construct v208@206 v207:#Lindex/nodejsModule/moduleSource/conventionalChangelog/index@7838 exception:v206index.js [2216->7924] (line 257)
207   v204 = dispatch v203:#catch@207 v188,v205 exception:v210index.js [2216->7924] (line 257) [203=[$$destructure$elt24]188=[$$destructure$rcvr24]]
BB72
208   v211 = lexical:readable@Lindex/nodejsModule/moduleSource/conventionalChangelogindex.js [7936->7944] (line 261)
209   return v211                            index.js [7929->7945] (line 261)
BB73


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1071)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1071>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1240:transform)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1240:transform>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1341:warn)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1341:warn>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1371:transform)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@1371:transform>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function Lindex/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     index.js [54->85] (line 3) [4=[arguments]]
BB2


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@2289)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@2289>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(Lindex/nodejsModule/moduleSource/conventionalChangelog/index@7838)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,Lindex/nodejsModule/moduleSource/conventionalChangelog/index@7838>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LArray>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..2]
    -> BB2
    -> BB4
BB2[3..4]
    -> BB3
BB3[5..5]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = fieldref v1.v3:#prototype           
2   v5 = new <JavaScriptLoader,LArray>@2     
BB2
3   set_prototype(v5, v4)                    
4   putfield v5.< JavaScriptLoader, LRoot, length, <JavaScriptLoader,LRoot> > = v7:#0
BB3
5   return v5                                
BB4
