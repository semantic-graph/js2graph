<Code body of function LwriteLog__spec>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v1 = new <JavaScriptLoader,LArray>@0     writeLog.spec.js [0->1110] (line 1) [1=[arguments]]
1   v6 = global:global Function              writeLog.spec.js [1->1109] (line 39)
2   v3 = construct v6@2 v5:#LwriteLog__spec/nodejsModule exception:v4writeLog.spec.js [1->1109] (line 39)
3   v14 = global:global __WALA__int3rnal__globalwriteLog.spec.js [1->1109] (line 39)
4   v2 = invoke v3@4 v14 exception:v15       writeLog.spec.js [1->1109] (line 39)
BB2


<ctor for <JavaScriptLoader,LFunction>(LwriteLog__spec/nodejsModule)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LwriteLog__spec/nodejsModule>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function LwriteLog__spec/nodejsModule>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB12
BB2[5..5]
    -> BB3
    -> BB12
BB3[6..8]
    -> BB4
    -> BB12
BB4[9..10]
    -> BB5
    -> BB12
BB5[11..11]
    -> BB6
    -> BB12
BB6[12..12]
    -> BB7
    -> BB12
BB7[13..19]
    -> BB8
    -> BB12
BB8[20..22]
    -> BB9
    -> BB12
BB9[23..23]
    -> BB10
    -> BB12
BB10[24..26]
    -> BB11
    -> BB12
BB11[27..27]
    -> BB12
BB12[-1..-2]
Instructions:
BB0
BB1
0   v3 = new <JavaScriptLoader,LArray>@0     writeLog.spec.js [1->1106] (line 1) [3=[arguments]]
1   v5 = global:global $$undefined           writeLog.spec.js [28->104] (line 2) [5=[module]]
3   v9 = global:global Object                writeLog.spec.js [41->103] (line 2)
4   check v9                                 writeLog.spec.js [41->103] (line 2)
BB2
5   v7 = construct v9@5 exception:v10        writeLog.spec.js [41->103] (line 2) [7=[module]]
BB3
6   v15 = global:global Function             writeLog.spec.js [41->103] (line 2)
7   v12 = construct v15@7 v14:#LwriteLog__spec/nodejsModule/__WALA__require exception:v13writeLog.spec.js [41->103] (line 2)
8   fieldref v7.v11:#require = v12 = v12     writeLog.spec.js [41->103] (line 2) [7=[module]]
BB4
9   v18 = global:global Object               writeLog.spec.js [98->100] (line 4)
10   check v18                               writeLog.spec.js [98->100] (line 4)
BB5
11   v17 = construct v18@11 exception:v19    writeLog.spec.js [98->100] (line 4)
BB6
12   fieldref v7.v16:#exports = v17 = v17    writeLog.spec.js [41->103] (line 2) [7=[module]]
BB7
14   v24 = global:global Function            writeLog.spec.js [109->1077] (line 36)
15   v21 = construct v24@15 v23:#LwriteLog__spec/nodejsModule/moduleSource exception:v22writeLog.spec.js [109->1077] (line 36)
16   v30 = global:global __WALA__int3rnal__globalwriteLog.spec.js [109->1077] (line 36)
18   v6 = prototype_values(v7)               writeLog.spec.js [907->921] (line 36) [7=[module]]
19   v31 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v6writeLog.spec.js [907->921] (line 36)
BB8
21   v32 = prototype_values(v7)              writeLog.spec.js [923->937] (line 36) [7=[module]]
22   v33 = getfield < JavaScriptLoader, LRoot, require, <JavaScriptLoader,LRoot> > v32writeLog.spec.js [923->937] (line 36)
BB9
23   v20 = invoke v21@23 v30,v31,v33,v7,v35:#writeLog.spec.js,v36:#/Users/zhen/projects/semantic-graph/js2graph/src/test/resources/regression/conventional-changelog/generated exception:v37writeLog.spec.js [109->1077] (line 36) [7=[module]]
BB10
25   v34 = prototype_values(v7)              writeLog.spec.js [1089->1103] (line 38) [7=[module]]
26   v38 = getfield < JavaScriptLoader, LRoot, exports, <JavaScriptLoader,LRoot> > v34writeLog.spec.js [1089->1103] (line 38)
BB11
27   return v38                              writeLog.spec.js [1082->1104] (line 38)
BB12


<ctor for <JavaScriptLoader,LFunction>(LwriteLog__spec/nodejsModule/__WALA__require)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LwriteLog__spec/nodejsModule/__WALA__require>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LFunction>(LwriteLog__spec/nodejsModule/moduleSource)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LwriteLog__spec/nodejsModule/moduleSource>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<Code body of function LwriteLog__spec/nodejsModule/moduleSource>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..4]
    -> BB2
    -> BB5
BB2[5..7]
    -> BB3
    -> BB5
BB3[8..11]
    -> BB4
    -> BB5
BB4[12..16]
    -> BB5
BB5[-1..-2]
Instructions:
BB0
BB1
0   v8 = new <JavaScriptLoader,LArray>@0     writeLog.spec.js [109->905] (line 7) [8=[arguments]]
1   v10 = global:global $$undefined          writeLog.spec.js [184->226] (line 8)
2   lexical:writeLog@LwriteLog__spec/nodejsModule/moduleSource = v10writeLog.spec.js [184->226] (line 8)
3   v14 = global:global __WALA__int3rnal__globalwriteLog.spec.js [199->225] (line 8)
4   v12 = invoke v4@4 v14,v15:#../lib/writeLog exception:v16writeLog.spec.js [199->225] (line 8) [4=[require]]
BB2
5   lexical:writeLog@LwriteLog__spec/nodejsModule/moduleSource = v12writeLog.spec.js [184->226] (line 8)
6   v19 = global:global describe             writeLog.spec.js [228->236] (line 10)
7   check v19                                writeLog.spec.js [228->236] (line 10)
BB3
8   v20 = global:global __WALA__int3rnal__globalwriteLog.spec.js [228->883] (line 10)
9   v25 = global:global Function             writeLog.spec.js [228->883] (line 10)
10   v22 = construct v25@10 v24:#LwriteLog__spec/nodejsModule/moduleSource/writeLog__spec@249 exception:v23writeLog.spec.js [228->883] (line 10)
11   v17 = invoke v19@11 v20,v21:#writeLog,v22 exception:v30writeLog.spec.js [228->883] (line 10)
BB4
16   v35 = dispatch v34:#exports@16 v5 exception:v36writeLog.spec.js [885->901] (line 35) [34=[$$destructure$elt17]5=[module, $$destructure$rcvr17]]
BB5


<Code body of function LwriteLog__spec/nodejsModule/__WALA__require>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..0]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
BB1
0   v4 = new <JavaScriptLoader,LArray>@0     writeLog.spec.js [54->85] (line 3) [4=[arguments]]
BB2


<ctor for <JavaScriptLoader,LFunction>(LwriteLog__spec/nodejsModule/moduleSource/writeLog__spec@249)>
CFG:
BB0[0..0]
    -> BB1
    -> BB7
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB7
BB3[3..3]
    -> BB4
    -> BB7
BB4[4..5]
    -> BB5
BB5[6..6]
    -> BB6
BB6[7..7]
    -> BB7
BB7[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LwriteLog__spec/nodejsModule/moduleSource/writeLog__spec@249>@2
BB3
3   v7 = new <JavaScriptLoader,LObject>@3    
BB4
4   set_prototype(v5, v4)                    
5   putfield v5.< JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > = v7
BB5
6   putfield v7.< JavaScriptLoader, LRoot, constructor, <JavaScriptLoader,LRoot> > = v5
BB6
7   return v5                                
BB7


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4


<ctor for <JavaScriptLoader,LObject>>
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..4]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v2 = new <JavaScriptLoader,LArray>@0     
BB1
1   v4 = getfield < JavaScriptLoader, LRoot, prototype, <JavaScriptLoader,LRoot> > v1
BB2
2   v5 = new <JavaScriptLoader,LObject>@2    
BB3
3   set_prototype(v5, v4)                    
4   return v5                                
BB4
